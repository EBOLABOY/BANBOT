---
description: 
globs: 
alwaysApply: true
---

# 加密货币价格预测AI项目规范

## 项目结构规则

1. **模块化组织**：
   - 保持src目录下的功能模块清晰分离：data、features、models、utils等
   - 每个模块应专注于单一职责

2. **导入路径规范**：
   - 使用绝对导入路径：`from src.xxx import yyy`而非`from xxx import yyy`
   - 避免循环导入问题

3. **文件命名约定**：
   - 主执行脚本使用`_main.py`后缀（如`feature_engineering_main.py`）
   - 实现类使用描述性名称（如`TechnicalIndicators`）

## 数据处理规则

1. **数据文件组织**：
   - 原始数据存放在`data/raw`目录
   - 处理后数据存放在`data/processed`目录
   - 特征数据存放在`data/processed/features`目录
   - 保持文件命名一致性：`{symbol}_{timeframe}_{date}.csv`

2. **数据质量控制**：
   - 缺失值处理优先使用前向填充（forward fill）
   - 异常值检测使用IQR方法（四分位范围）
   - 每个处理步骤都应记录日志

## 特征工程规则

1. **特征计算准则**：
   - 价格特征基于收盘价（close）计算
   - 趋势特征考虑多个时间窗口（短期/中期/长期）
   - 波动率特征需标准化处理

2. **特征命名规范**：
   - 特征名应清晰表达其含义和计算参数
   - 使用下划线分隔命名部分：`{category}_{name}_{parameter}`
   - 命名一致且有意义（如`price_rel_sma_100`表示价格相对于100周期简单移动平均线的比率）

3. **特征选择原则**：
   - 优先选择具有预测能力的特征
   - 避免高度相关特征的冗余
   - 保持特征解释性

## 模型训练规则

1. **数据分割原则**：
   - 时间序列数据必须按时间顺序分割
   - 训练集/验证集/测试集比例建议为70%/10%/20%
   - 避免数据泄露（未来数据不能用于训练）

2. **模型选择准则**：
   - 价格变化预测优先使用回归模型
   - 方向预测使用分类模型
   - 综合考虑模型性能和计算复杂度

3. **评估标准**：
   - 回归任务使用RMSE、MAE、R2评估
   - 分类任务使用准确率、精确率、召回率、F1分数
   - 交易策略需考虑Sharpe比率、最大回撤等金融指标

## 交易策略设计规则

1. **基于特征的信号生成**：
   - 重点关注`price_rel_sma_100`等高重要性特征
   - 结合趋势和动量指标确认信号
   - 使用波动率指标调整仓位大小

2. **风险控制原则**：
   - 单笔交易风险不超过总资金的2%
   - 设置止损和止盈规则
   - 避免过度交易（过频交易）

3. **策略验证准则**：
   - 使用历史数据进行回测验证
   - 关注风险调整后的收益
   - 进行鲁棒性测试（不同时间段、不同交易对）

## 代码质量规则

1. **代码风格**：
   - 遵循PEP8编码规范
   - 适当使用注释解释复杂逻辑
   - 类和函数应有清晰的文档字符串

2. **错误处理**：
   - 合理使用try-except处理可能的异常
   - 使用logging模块记录异常和警告
   - 输入验证确保数据符合期望

3. **项目维护**：
   - 定期更新依赖包（requirements.txt）
   - 使用Git进行版本控制
   - 确保README文档保持更新

这些规则可以帮助项目保持良好的组织结构、高质量的代码实现以及有效的交易策略。
